//home iframe
   
       <iframe
              srcDoc={localStorage.getItem("htmlResponse")}
              className={style.iframe}
            ></iframe>
   
   
// loadanimation

export const loadingAnimation = (element: HTMLElement) => {
  const dots = "...";
  let index = 0;
  const speed = 150;

  const animationElement = document.createElement("div");
  element.appendChild(animationElement);

  function load() {
    if (index === 4) {
      index = 0;
    }

    if (index <= dots.length) {
      animationElement.innerHTML = dots.slice(0, index);
      index++;
      setTimeout(load, speed);
    }
  }
  load();
};

    //etusivu
    
    <>
      <div className={style.container}>
        <div className={style.top}>
          <header className={style.header}>
            <h1>&lt;Webweave/&gt;</h1>
          </header>
          <nav className={style.nav}>
            <button className={style.button}>luo uusi</button>
            <button className={style.button}>muokkaa</button>
            <button className={style.button}>käyttäjä</button>
          </nav>
          <textarea className={style.prompt}></textarea>
          <textarea className={style.settings}></textarea>
          <button className={style.button}>css framework</button>
        </div>
        <div className={style.secondary}>
          <div className={style.preview}>
            <iframe
              className={style.iframe}
              src="https://todo-403206.lm.r.appspot.com"
            ></iframe>
          </div>
          <button className={style.button}>tallenna sivu</button>
        </div>
      </div>
    </>


// testiprompti 
create an html skeleton with bootstrap responsive design and responsive menu and responsive hamburger menu that works on mobile as well. And import all the necessary scripts before the closing body tag, such as jquery, popper and bootstrap


// toimiva login.jsx

import React, { useContext, useRef } from "react";
import style from "../assets/style";
import { AuthContext } from "../context/AuthContext";
import { auth } from "../firebase";

export const Login = () => {
  const user = useContext(AuthContext);

  const emailRef = useRef<HTMLInputElement>(null);
  const passwordRef = useRef<HTMLInputElement>(null);

  const createAccount = async () => {
    try {
      await auth.createUserWithEmailAndPassword(
        emailRef.current!.value,
        passwordRef.current!.value
      );
    } catch (error) {
      console.error(error);
    }
  };

  const signIn = async () => {
    try {
      await auth.signInWithEmailAndPassword(
        emailRef.current!.value,
        passwordRef.current!.value
      );
    } catch (error) {
      console.error(error);
    }
  };

  const signOut = async () => {
    await auth.signOut();
  };

  return (
    <>
      {user && (
        <button className={style.button} onClick={signOut}>
          Sign Out
        </button>
      )}
      {!user ? (
        <div className={style.container}>
          <div className={style.top}>
            <header className={style.header}>
              <h1>&lt;Webweave/&gt;</h1>
            </header>
            <form className={style.form}>
              <h2 className={style.h2}>Login</h2>
              <form id="formEmail">
                <input
                  className={style.input}
                  ref={emailRef}
                  type="email"
                  placeholder="email"
                />
              </form>
              <form id="formPassword">
                <input
                  className={style.input}
                  ref={passwordRef}
                  type="password"
                  placeholder="password"
                />
              </form>
              <form>
                <button className={style.button} onClick={signIn} type="button">
                  Login
                </button>

                <p className={style.p}>
                  Don't have an account?{" "}
                  <button
                    className={style.link}
                    onClick={createAccount}
                    type="button"
                  >
                    Sign up
                  </button>
                </p>
              </form>
            </form>
          </div>
        </div>
      ) : (
        <div className={style.container}>
          <div className={style.top}>
            <header className={style.header}>
              <h1>&lt;Webweave/&gt;</h1>
            </header>
            <h2 className={style.h2}>Welcome {user.email}</h2>
            <button className={style.button}>Start crating!</button>
          </div>
        </div>
      )}
    </>
  );
};


vanha style.iframe: 
"absolute top-0 left-0 w-full h-full"


  /*
      //sivujen tallennus käyttäjälle
      firestore
        .collection("users")
        .doc(id)
        .collection("pages")
        .add({ pageName: "Sample page", content: "<h1>header</h1>" });
        */